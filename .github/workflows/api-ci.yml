# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: evaluation-api ci pipeline

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
#  push:
#    paths:
#      - 'evaluation-api/**'
#    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT: evaluation-api
      TAG: latest
      ROLE_ARN: arn:aws:iam::275291497228:role/github-actions-ecr-full-access
      AWS_REGION: us-east-1
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: zulu
        cache: 'gradle'
    
    - name: Gradle build
      run: |
        cd ${{ env.PROJECT }}/
        ./gradlew build
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ env.ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./${{ env.PROJECT }}
        push: true
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ env.PROJECT }}:${{ env.TAG }}
